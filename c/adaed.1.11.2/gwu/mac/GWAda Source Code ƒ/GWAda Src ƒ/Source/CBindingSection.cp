/****************************************************************************** CBindingSection.c				CBindingSection ArrayPane Class		Copyright (C) 1985-1992  New York University	Copyright (C) 1994 George Washington University	 	This file is part of the GWAdaEd system, an extension of the Ada/Ed-C	system.  See the Ada/Ed README file for warranty (none) and distribution	info and also the GNU General Public License for more details.	Generated by Classyª (Object Factory) 8:26 PM Mon, Sep 27, 1993	This file is only generated once. You can modify it by filling	in the placeholder functions and adding any new functions you wish.	If you change the name of the document class, a fresh version of this	file will be generated. If you have made any changes to the file	with the old name, you will have to copy those changes to the new	file by hand. ******************************************************************************/#include "CBindingSection.h"/**** C O N S T R U C T I O N / D E S T R U C T I O N   M E T H O D S ****//****************************************************************************** ICBindingSection	Initialize the object	IMPORTANT NOTE: When an object is initialized as part of a	'CVue' resource, this I-function is NEVER CALLED. Instead,	the object is initialized in its GetFrom method(s). To add your	own initialization, override GetFrom. ******************************************************************************/void	CBindingSection::ICBindingSection(	CView			*anEnclosure,	CBureaucrat		*aSupervisor,	short			aWidth,	short			aHeight,	short			aHEncl,	short			aVEncl,	SizingOption	aHSizing,	SizingOption	aVSizing){	x_CBindingSection::Ix_CBindingSection(anEnclosure, aSupervisor,					aWidth, aHeight, aHEncl, aVEncl, aHSizing, aVSizing);		// Initialize your own data members below}void CBindingSection::GetCellText( Cell aCell, short availableWidth, StringPtr itsText){	unsigned char numBuf[20];			/* make a default string which is row,col */		NumToString( aCell.v, itsText);	itsText[ ++itsText[0]] = ',';	NumToString( aCell.h, numBuf);	ConcatPStrings( itsText, numBuf);}