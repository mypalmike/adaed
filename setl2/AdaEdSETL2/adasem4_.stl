--
--$Header: /cs.a/ada/ada/src/ada9x/adasem4_.stl,v 1.1 90/12/05 16:16:39 ada Exp $
--
package adasem4;
   procedure check_type(context_type, expn) ;
   procedure constraint_kind(typ) ;
   procedure apply_constraint(expn, typ) ;
   procedure expression_type(expn) ;
   procedure resolve1(expn) ;
   procedure resolve2(typed_expression, context_type) ; 
   procedure result_types(op_name, arg_list) ;
   procedure disambiguate(valid_ops, arg_list, context_type) ;
   procedure compatible_operators(opn, arg_types, context_type) ;
   procedure get_arg_types(arg) ;
   procedure hides(f, arg_types, context_type);
   procedure remove_conversions(typed_expression) ;
   procedure remove_conversions1(typed_expression) ;
   procedure valid_operator_types(opn, arg_list) ;
   procedure valid_arithmetic_types(opn, arg_list) ;
   procedure valid_concatenation_types(typ1, typ2) ;
   procedure intersect_types(t1,t2) ;
   procedure valid_argument_list(proc_name, arg_list) ;
   procedure complete_argument_list(formals, arg_list) ;
   procedure order_argument_list(arg_list, sig) ;
   procedure complete_operator_expression(op_name, ctx_type, arg_list) ;
   procedure specialize(u_expr, context_type) ;
   procedure universal_expression(expn) ;
   procedure bind_arguments(actual, f_type, f_mode, i) ;
   procedure valid_array_expression(a_expression, i_list) ;
   procedure complete_array_expression(a_expression, i_num, c_type) ;
   procedure valid_selected_expression(expn) ;
   procedure complete_selected_expression(prefix1, selector, c_type) ;
   procedure is_component(expn) ;
   procedure complete_aggregate(agg_type, arg_list) ; 
   procedure complete_a_aggregate(indices, comp_type, is_unc, arg_list) ;
   procedure complete_component(indices, comp_type, is_unc, expn) ;
   procedure complete_string_literal(strg, indices, comp) ;
   procedure complete_r_aggregate(aggregate_type, arg_list) ;
   procedure valid_task_name(task_name) ;
   procedure complete_task_name(task1, context_type) ;
   procedure is_task_type(task) ;
   procedure valid_attribute(expn) ;
   procedure res2_check(expn2, context_type) ;
   procedure compatible_types(t_out, t_in) ;
   procedure type_error(op_names,typ,num_types) ;
   procedure premature_access(type_mark) ;
   procedure pass1_error(msg1, msg2, lrm_sec) ;
   procedure full_type_name(typ) ;
   procedure resolve1_aggregates(expn) ;
   procedure resolve1_index(expn);
   procedure resolve1_slicing(expn) ;
   procedure resolve1_membership(expn) ;
   procedure resolve1_dereference(expn) ;
   procedure resolve1_new(expn) ;
   procedure resolve1_new_init(expn);
   procedure some_access_type(desig_t) ;
   procedure is_allocator_type(t) ;
   procedure resolve1_choice_list(expn) ;
   procedure resolve1_conversion(expn) ;
   procedure resolve1_qualify(expn);
   procedure resolve11_range(expn) ;
   procedure resolve1_parenthesised_expression(expn);
   procedure resolve1_call_or_index(expn) ;
   procedure resolve2_subprograms(op_name, context_type, arg_list) ;
   -- For a procedure or function, the signature imposes a type on 
   procedure resolve2_entries (op_name,arg_list) ;
   procedure resolve2_int_literal(context_type,expn);
   procedure resolve2_real_literal(context_type,expn);
   procedure resolve2_string_literal(context_type,expn);
   procedure resolve2_null(context_type);
   procedure single_access_type(desig_type) ;
   procedure resolve2_aggregates(expn,context_type,types);
   procedure find_aggregate_types ;
   procedure resolve2_arrays(expn,context_type);
   procedure resolve2_slices(expn,context_type);
   procedure resolve2_paren(expn,context_type);
   procedure resolve2_dereference(expn,context_type);
   procedure resolve2_allocator(expn,context_type) ;
   procedure resolve2_attributes(expn,context_type,types) ;
   procedure resolve2_conversions(expn,context_type) ;
   procedure resolve2_qualify(expn, context_type) ;
   procedure resolve2_range(expn,context_type,types) ;
   procedure resolve2_call_or_index(expn,context_type) ;
   procedure check_bounds_in_range(low,high,b_type);
end adasem4;
